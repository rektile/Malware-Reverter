import win32com.client
from classes.Program import Program

class WindowsSchedulerAnalyzer:
    def __init__(self):
        self.taskService = win32com.client.Dispatch("Schedule.Service")
        self.taskService.Connect()

    def makeSnapshot(self):

        programDic = {}

        root_folder = self.taskService.GetFolder('\\')
        tasks = root_folder.GetTasks(0)
        for task in tasks:
            programDic = self.updateProgramDic(task, programDic)

        return programDic

    def updateProgramDic(self, task, programDic):
        for action in task.Definition.Actions:
            programPath = self.getAction(action)

            if programPath:
                executableName = programPath.split("\\")[-1].lower()

                if executableName not in programDic:
                    p = Program()
                    p.executableName = executableName

                else:
                    p = programDic[executableName]

                p.filePaths.add(programPath)
                p.taskSchedule.add(task.Name)

                programDic[executableName] = p

        return programDic


    def getAction(self, action):
        ty = action.Type

        if ty == 0:
            return action.Path
        else:
            return None


w = WindowsSchedulerAnalyzer()
w.makeSnapshot()
