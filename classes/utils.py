import winreg
import ctypes
from loguru import logger
from datetime import datetime
import sys
from pathlib import Path


def initLogger():

    Path("./output/").mkdir(parents=True, exist_ok=True)

    now = datetime.now()

    fileName = f'scan_{now.strftime("%d-%m-%Y_%Hu%Mm%Ss")}.txt'
    logger.remove()
    logger.add(sys.stdout, colorize=False, format="{message}")
    logger.add(f"./output/{fileName}", colorize=False, format="{message}")

def isAdmin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False


def prepareRegistryPath(path):
    HKeyString, restOfPath = path.split("\\", 1)

    if HKeyString == "HKEY_LOCAL_MACHINE":
        return winreg.HKEY_LOCAL_MACHINE, restOfPath
    elif HKeyString == "HKEY_CURRENT_USER":
        return winreg.HKEY_CURRENT_USER, restOfPath


def getValueFromRegistry(keysWithValue: list[tuple]) -> list:
    startupFolders = []

    for path, value in keysWithValue:
        hkey, registryPath = prepareRegistryPath(path)
        soft = winreg.OpenKeyEx(hkey, registryPath)

        startupPath = winreg.QueryValueEx(soft, value)[0]
        startupFolders.append(startupPath)

        winreg.CloseKey(soft)

    return startupFolders
