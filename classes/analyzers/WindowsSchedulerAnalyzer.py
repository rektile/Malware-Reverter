import win32com.client
from classes.analyzers.Analyzer import Analyzer
from classes.snapshots.SchedulerSnapshot import SchedulerSnapshot
from classes.dataTypes.Changes import Changes
from copy import deepcopy
from loguru import logger


class WindowsSchedulerAnalyzer(Analyzer):
    def __init__(self):
        super().__init__()
        self.taskService = win32com.client.Dispatch("Schedule.Service")
        self.taskService.Connect()

    def resultText(self):
        logger.info("")
        logger.info("[!] These are the changes in the Windows Scheduler")

    def compare(self):

        allChanges = []
        copySnapshot1 = deepcopy(self.snapshot1)
        copySnapshot2 = deepcopy(self.snapshot2)

        for snapshot1 in self.snapshot1:
            for snapshot2 in self.snapshot2:
                if snapshot1.task == snapshot2.task:
                    if snapshot1.programPath != snapshot2.programPath:
                        change = Changes(snapshot1.task, snapshot1.programPath, snapshot2.programPath)
                        allChanges.append(change)
                        copySnapshot1.remove(snapshot1)
                        copySnapshot2.remove(snapshot2)
                    break

        for snapAfter in copySnapshot2:
            if snapAfter not in copySnapshot1:
                change = Changes(snapAfter.task, None, snapAfter.programPath)
                allChanges.append(change)

        for snapBefore in copySnapshot1:
            if snapBefore not in copySnapshot2:
                change = Changes(snapBefore.task, snapBefore.programPath, None)
                allChanges.append(change)

        self.difference = allChanges

    def snapshot(self) -> list[SchedulerSnapshot]:

        snapShots: list[SchedulerSnapshot] = []

        root_folder = self.taskService.GetFolder('\\')
        tasks = root_folder.GetTasks(0)
        for task in tasks:
            for action in task.Definition.Actions:
                programPath = self.getAction(action)
                if programPath:
                    snap = SchedulerSnapshot(task, task.Name, programPath)
                    snapShots.append(snap)

        return list(snapShots)

    def getAction(self, action):
        ty = action.Type

        if ty == 0:
            return action.Path
        else:
            return None
